# Overlays: apps/kfp-tekton/upstream/third-party/kfp-csi-s3/csi-s3-deployment.yaml

# Source: dlf-chart/charts/csi-s3-chart/templates/csi-s3.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: kfp-csi-s3
  labels:
    app.kubernetes.io/name: "kubeflow"
  namespace: kubeflow
spec:
  selector:
    matchLabels:
      app: kfp-csi-s3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "kubeflow"
        app: kfp-csi-s3
    spec:
      serviceAccountName: kfp-csi-s3
      containers:
        - name: driver-registrar
          image: "quay.io/k8scsi/csi-node-driver-registrar:v1.2.0"
          imagePullPolicy: Always
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/kfp-csi-s3/csi.sock
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /registration
              name: registration-dir
        - name: kfp-csi-s3
          image: "quay.io/datashim/csi-s3:latest-amd64"
          imagePullPolicy: Always
          args:
            - "--v=5"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: cheap
              value: "off"
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /dev
              name: dev-dir
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/kfp-csi-s3
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /dev
            type: Directory
          name: dev-dir
---
# Source: dlf-chart/charts/csi-s3-chart/templates/attacher.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-attacher-s3
  namespace: kubeflow
  labels:
    app.kubernetes.io/name: "kubeflow"
spec:
  serviceName: "csi-attacher-s3"
  replicas: 1
  selector:
    matchLabels:
      app: csi-attacher-s3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "kubeflow"
        app: csi-attacher-s3
    spec:
      serviceAccountName: csi-attacher
      containers:
        - name: csi-attacher
          image: "quay.io/k8scsi/csi-attacher:v2.2.0"
          imagePullPolicy: Always
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/kfp-csi-s3
            type: DirectoryOrCreate
          name: socket-dir
---
# Source: dlf-chart/charts/csi-s3-chart/templates/provisioner.yaml
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: csi-provisioner-s3
  labels:
    app.kubernetes.io/name: "kubeflow"
  namespace: kubeflow
spec:
  serviceName: "csi-provisioner-s3"
  replicas: 1
  selector:
    matchLabels:
      app: csi-provisioner-s3
  template:
    metadata:
      labels:
        app: csi-provisioner-s3
    spec:
      serviceAccountName: csi-provisioner
      containers:
        - name: csi-provisioner
          image: "quay.io/k8scsi/csi-provisioner:v2.0.2"
          imagePullPolicy: Always
          args:
            - -v=5
            - --csi-address=/csi/csi.sock
            - --feature-gates=Topology=true
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container.
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/kfp-csi-s3
            type: DirectoryOrCreate
          name: socket-dir
